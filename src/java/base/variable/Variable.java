package java.base.variable;

public class Variable {

    public static void main(String[] args) {
        /**
         * 变量类型
         */
        // 整型变量
        // 计算机以补码的方式保存  第一位表示符号位
        // 正数的原码、反码、补码都一样  00000000~01111111  0~(2^7-1)  0~127
        // 负数的原码 10000001~11111111  1~（2^7-1） -1~-127
        //      反码 01111110~00000000
        //      补码 01111111~00000001  补码为反码+1
        // 那么-128去哪里了呢  0去哪里了呢
        // 观察上面保存的数据发现存在计算机中的  10000000 都没定义
        // 人为指定该值为-128 并且没有原码和反码，可以理解为 正0为0   负0为-128
        // 同理应用到多位上
        byte b = 1; // 8位   -128 127  2^7 = 128
        short s = 200; // 16位  (-2^15)~(2^15-1)
        int i = 300;  // 32位   (-2^31)^(2^31-1)
        long l = 400; // 63位   (-2^63)^(2^63-1)
//        byte b =200;//编译标错  其他同理


        // 字符型
        // char类型用于存放一个字符，值用单引号'表示 (双引号表示字符串)
        // 其长度和short一样，也是16位的
        // 只能存放一个字符，超过一个字符就会产生编译错误
        // 仅能存0-2^16   unicode编码字符集中的对应的，超过的不能存, 存储的方式UTF-16
        char c = '中';
//        char c = "中"; 报错
//        char c = '中国';报错
//        char c = 'ab';报错


        // 浮点型
        // float单精度 4个字节  32位
        // double 双精度 8个字节  64位
        // float 32位 分4部分 数符（1位表正负）  尾数（0.255，保存255）  指数符（1位表指数正负）  指数
        // 指数多少位  尾数多少位由计算机决定
        // float内存小，运算速度快 double内存是2倍，运算速度慢  一般都用double
        float f = 32.234f;
//        float f2 = 32.2; 编译报错  默认是double型的
        double d = 2.323;

        // 布尔型  1位  0 false 1 true;
        boolean b1 = Boolean.TRUE;
        boolean b2 = Boolean.FALSE;

        // String 非基本类型，但经常使用
        String str = "Hello World";

    }
}
